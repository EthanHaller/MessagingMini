{"ast":null,"code":"var _jsxFileName = \"/Users/ethanhaller/personal-projects/Forge/MessagingMini/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, Typography, Box, Container, Paper, List, Grid } from '@mui/material';\nimport LoginIcon from '@mui/icons-material/Login';\nimport EditableMessage from './EditableMessage';\nimport UserMessages from './UserMessages';\nimport AllMessages from './AllMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [info, setInfo] = useState();\n  const [usersMessages, setUsersMessages] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    getAllMessages();\n  }, [isLoggedIn]);\n  useEffect(() => {\n    getMessagesForUser(username);\n  }, [isLoggedIn]);\n  const getMessages = user => {\n    getAllMessages();\n    getMessagesForUser(user);\n  };\n  const getAllMessages = () => {\n    fetch(\"http://localhost:9000/messages/info\").then(res => res.json()).then(text => setInfo(text.result)).catch(err => console.log(err));\n  };\n  const getMessagesForUser = user => {\n    fetch(\"http://localhost:9000/messages/info?user=\" + user).then(res => res.json()).then(text => setUsersMessages(text.result)).catch(err => console.log(err));\n  };\n  const post = () => {\n    axios.post(\"http://localhost:9000/messages/post/\", {\n      text: message,\n      likes: 0,\n      responses: [],\n      username: username\n    }).then(res => console.log(res.data)).catch(err => console.log(err)).then(getMessages(username));\n  };\n  const updateMessage = e => {\n    setMessage(e.target.value);\n  };\n  const updateUsername = e => {\n    setUsername(e.target.value);\n  };\n  console.log(info);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: isLoggedIn ? \"Message Board\" : \"Message Board Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              onChange: updateUsername,\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setIsLoggedIn(true),\n              variant: \"outlined\",\n              endIcon: /*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 87\n              }, this),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              onChange: updateMessage,\n              placeholder: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => post(),\n              variant: \"outlined\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: updateMessage,\n          placeholder: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => post(),\n          variant: \"outlined\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(UserMessages, {\n          usersMessages: usersMessages,\n          getMessages: () => getMessages(username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllMessages, {\n          info: info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nmKJBZdZ3vvZURK0fP9ca6A6hV0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","useEffect","Button","TextField","Typography","Box","Container","Paper","List","Grid","LoginIcon","EditableMessage","UserMessages","AllMessages","jsxDEV","_jsxDEV","App","_s","info","setInfo","usersMessages","setUsersMessages","message","setMessage","username","setUsername","isLoggedIn","setIsLoggedIn","getAllMessages","getMessagesForUser","getMessages","user","fetch","then","res","json","text","result","catch","err","console","log","post","likes","responses","data","updateMessage","e","target","value","updateUsername","sx","flexGrow","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","onChange","placeholder","onClick","endIcon","Fragment","_c","$RefreshReg$"],"sources":["/Users/ethanhaller/personal-projects/Forge/MessagingMini/client/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from \"axios\"\n\nimport React, {useState, useEffect} from \"react\"\nimport { Button, TextField, Typography, Box, Container, Paper, List, Grid } from '@mui/material';\nimport LoginIcon from '@mui/icons-material/Login';\nimport EditableMessage from './EditableMessage';\nimport UserMessages from './UserMessages';\nimport AllMessages from './AllMessages'\n\nfunction App() {\n  const [info, setInfo] = useState();\n  const [usersMessages, setUsersMessages] = useState();\n  const [message, setMessage] = useState(\"\")\n  const [username, setUsername] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    getAllMessages()\n  }, [isLoggedIn])\n  useEffect(() => {\n    getMessagesForUser(username)\n  }, [isLoggedIn])\n\n  const getMessages = (user) => {\n    getAllMessages()\n    getMessagesForUser(user)\n  }\n  const getAllMessages = () => {\n    fetch(\"http://localhost:9000/messages/info\")\n    .then((res) => res.json())\n    .then((text) => setInfo(text.result))\n    .catch((err) => console.log(err))\n  }\n  const getMessagesForUser = (user) => {\n    fetch(\"http://localhost:9000/messages/info?user=\" + user)\n    .then((res) => res.json())\n    .then((text) => setUsersMessages(text.result))\n    .catch((err) => console.log(err))\n  }\n\n  const post = () => {\n    axios.post(\"http://localhost:9000/messages/post/\", {\n      text: message,\n      likes: 0,\n      responses: [],\n      username: username\n    })\n    .then((res) => console.log(res.data))\n    .catch((err) => console.log(err))\n    .then(getMessages(username))\n  }\n\n  const updateMessage = (e) => {\n    setMessage(e.target.value)\n  }\n  const updateUsername = (e) => {\n    setUsername(e.target.value)\n  }\n\n  console.log(info)\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Typography variant='h3'>{isLoggedIn ? \"Message Board\" : \"Message Board Login\"}</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Box>\n            <Box>\n              <TextField onChange={updateUsername} placeholder='Username' />\n              <Button onClick={() => setIsLoggedIn(true)} variant='outlined' endIcon={<LoginIcon />}>Login</Button>\n            </Box>\n            {isLoggedIn &&\n            <Box>\n              <TextField onChange={updateMessage} placeholder='Message' />\n          <Button onClick={() => post()} variant='outlined'>Post</Button>\n            </Box>\n            }\n          </Box>\n        </Grid>\n      </Grid>\n      {isLoggedIn && \n      <React.Fragment>\n        <Box>\n          <TextField onChange={updateMessage} placeholder='Message' />\n          <Button onClick={() => post()} variant='outlined'>Post</Button>\n        </Box>\n        <Box>\n          <UserMessages usersMessages={usersMessages} getMessages={() => getMessages(username)}/>\n          <AllMessages info={info}/>\n        </Box>\n      </React.Fragment>\n      }\n    </Box>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}